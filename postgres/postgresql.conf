# PostgreSQL configuration file
# This file is mounted into the container

# Connection settings
listen_addresses = '*'
hba_file = '/etc/postgresql/pg_hba.conf'

# TCP Keepalives
# These settings help detect dead client connections more quickly, preventing
# long-running queries from continuing after a client disconnects.
# After 5s of inactivity, send a keepalive probe.
tcp_keepalives_idle = 5
# Send a probe every 1s if the previous one was not acknowledged.
tcp_keepalives_interval = 1
# After 5 unacknowledged probes, consider the connection dead.
# Total time to detect a dead connection: 5 + (1 * 5) = 10 seconds.
tcp_keepalives_count = 5

# For long-running queries, this allows the server to check if the client
# connection is still alive. If the connection is dead (e.g., detected via
# keepalives), the query will be cancelled. This requires kernel support (Linux).
client_connection_check_interval = 5s

# Memory settings
# These are now set dynamically in start-postgres.sh based on environment variables.

# Write-ahead log settings
wal_buffers = 64MB                # Set WAL buffers to 64MB, allowing more WAL data to be stored in memory before being written to disk, reducing write frequency.
synchronous_commit = off          # Disable synchronous_commit to avoid waiting for WAL flush to disk, increasing performance at the cost of durability.
wal_writer_delay = 500ms          # Delay WAL writes to disk by 500ms to batch more transactions and reduce disk I/O pressure.

# Configure wal2json
wal_level = logical

# Checkpoint settings
checkpoint_timeout = 15min        # Increase the time between checkpoints to 15 minutes, reducing I/O spikes by having fewer checkpoints.
checkpoint_completion_target = 0.9 # Allow checkpoints to be spread over 90% of the time between checkpoints, reducing their performance impact.

# Query tuning
# effective_cache_size is now set dynamically in start-postgres.sh.
hash_mem_multiplier = 2.0         # Allow hash-based operations to use more memory.

# Logging
# Default logging levels. These will be overridden by start-postgres.sh if DEBUG=true.
# log_destination, logging_collector are best set via command line for Docker.
log_min_messages = fatal
log_min_duration_statement = 1000 # Log queries slower than 1000ms by default.

# Other settings
temp_buffers = 256MB              # Allocate memory for temporary tables operations.
max_stack_depth = 7MB             # Increase stack depth for complex recursive queries (7MB is below the 7680kB limit).
max_locks_per_transaction = 2048 # Increased to handle batch processing

# Extension settings
cron.database_name = 'postgres'
shared_preload_libraries = 'pg_stat_monitor,wal2json'
