SET datestyle TO 'ISO, DMY';
BEGIN;
\i test/setup.sql
-- While the datestyle is set for the database, the pg_regress tool sets the MDY format
-- to ensure consistent date formatting, so we must manually override this
SET datestyle TO 'ISO, DMY';
\if :{?DEBUG}
SET client_min_messages TO debug1;
\else
SET client_min_messages TO NOTICE;
\endif
-- Create temporary function to execute queries as system user
CREATE OR REPLACE FUNCTION test.sudo_exec(
    sql text,
    OUT results jsonb
) RETURNS jsonb
SECURITY DEFINER LANGUAGE plpgsql AS $sudo_exec$
DECLARE
    result_rows jsonb;
BEGIN
    -- Check if the SQL starts with common DDL keywords
    IF sql ~* '^\s*(CREATE|DROP|ALTER|TRUNCATE|GRANT|REVOKE|ANALYZE)' THEN
        -- For DDL statements, execute directly
        EXECUTE sql;
        results := '[]'::jsonb;
    ELSE
        -- For DML/queries, wrap in a SELECT to capture results
        EXECUTE format('
            SELECT COALESCE(
                jsonb_agg(row_to_json(t)),
                ''[]''::jsonb
            )
            FROM (%s) t',
            sql
        ) INTO result_rows;
        results := result_rows;
    END IF;
END;
$sudo_exec$;
-- Grant execute to public since this is for testing
GRANT EXECUTE ON FUNCTION test.sudo_exec(text) TO PUBLIC;
\echo Add users for testing purposes
Add users for testing purposes
SELECT * FROM public.user_create('test.admin@statbus.org', 'admin_user'::statbus_role, 'Admin#123!');
         email          |  password  
------------------------+------------
 test.admin@statbus.org | Admin#123!
(1 row)

SELECT * FROM public.user_create('test.regular@statbus.org', 'regular_user'::statbus_role, 'Regular#123!');
          email           |   password   
--------------------------+--------------
 test.regular@statbus.org | Regular#123!
(1 row)

SELECT * FROM public.user_create('test.restricted@statbus.org', 'restricted_user'::statbus_role, 'Restricted#123!');
            email            |    password     
-----------------------------+-----------------
 test.restricted@statbus.org | Restricted#123!
(1 row)

\echo "Setting up Statbus to test enterprise grouping and primary"
"Setting up Statbus to test enterprise grouping and primary"
-- A Super User configures statbus.
CALL test.set_user_from_email('test.admin@statbus.org');
\echo "User selected the Activity Category Standard"
"User selected the Activity Category Standard"
INSERT INTO settings(activity_category_standard_id,only_one_setting)
SELECT id, true FROM activity_category_standard WHERE code = 'nace_v2.1'
ON CONFLICT (only_one_setting)
DO UPDATE SET
   activity_category_standard_id =(SELECT id FROM activity_category_standard WHERE code = 'nace_v2.1')
   WHERE settings.id = EXCLUDED.id;
;
SELECT acs.code
  FROM public.settings AS s
  JOIN activity_category_standard AS acs
    ON s.activity_category_standard_id = acs.id;
   code    
-----------
 nace_v2.1
(1 row)

\echo "User uploads the sample activity categories"
"User uploads the sample activity categories"
\copy public.activity_category_available_custom(path,name,description) FROM 'samples/norway/activity_category/activity_category_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.activity_category_available;
 count 
-------
  2215
(1 row)

\echo "User uploads the sample regions"
"User uploads the sample regions"
\copy public.region_upload(path, name) FROM 'samples/norway/regions/norway-regions-2024.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.region;
 count 
-------
   417
(1 row)

\echo "User uploads the sample legal forms"
"User uploads the sample legal forms"
\copy public.legal_form_custom_only(code,name) FROM 'samples/norway/legal_form/legal_form_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.legal_form_available;
 count 
-------
    46
(1 row)

\echo "User uploads the sample sectors"
"User uploads the sample sectors"
\copy public.sector_custom_only(path,name,description) FROM 'samples/norway/sector/sector_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.sector_available;
 count 
-------
    33
(1 row)

SAVEPOINT before_loading_units;
\echo "Test births at the start of the year"
"Test births at the start of the year"
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

\echo "User uploads the legal units"
"User uploads the legal units"
\copy public.import_legal_unit_era(valid_from,valid_to,tax_ident,name,birth_date,death_date,physical_address_part1,physical_postcode,physical_postplace,physical_region_code,physical_country_iso_2,postal_address_part1,postal_postcode,postal_postplace,postal_region_code,postal_country_iso_2,primary_activity_category_code,secondary_activity_category_code,sector_code,legal_form_code) FROM 'test/data/41_legal-units-births-start-of-year.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                2 |                2
(1 row)

\echo Run worker processing to run import jobs and generate computed data
Run worker processing to run import jobs and generate computed data
CALL worker.process_tasks();
SELECT queue, state, count(*) FROM worker.tasks AS t JOIN worker.command_registry AS c ON t.command = c.command GROUP BY queue,state ORDER BY queue,state;
    queue    |   state   | count 
-------------+-----------+-------
 analytics   | completed |     9
 maintenance | pending   |     1
(2 rows)

\echo "Check legal units over time"
"Check legal units over time"
SELECT external_idents ->> 'tax_ident' as tax_ident, name, valid_after, valid_from, valid_to, birth_date, death_date
FROM public.statistical_unit
WHERE unit_type = 'legal_unit'
ORDER BY external_idents ->> 'tax_ident', valid_from;
 tax_ident |       name        | valid_after | valid_from | valid_to | birth_date | death_date 
-----------+-------------------+-------------+------------+----------+------------+------------
 823573673 | Kranløft Vestland | 2009-12-31  | 2010-01-01 | infinity | 2010-01-01 | 
 921835809 | Kranløft Østland  | 2010-12-31  | 2011-01-01 | infinity | 2011-01-01 | 
(2 rows)

\echo "Check statistical unit history by year - births should be 1 for year 2010 and 2011"
"Check statistical unit history by year - births should be 1 for year 2010 and 2011"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year       | 2010 |       | legal_unit |     1 |      1 |      0
 year       | 2011 |       | legal_unit |     2 |      1 |      0
 year       | 2012 |       | legal_unit |     2 |      0 |      0
(3 rows)

\echo "Check statistical unit history by year-month - births should be 1 for year-month 2010-1 and 2011-1"
"Check statistical unit history by year-month - births should be 1 for year-month 2010-1 and 2011-1"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year-month'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year-month | 2010 |     1 | legal_unit |     1 |      1 |      0
 year-month | 2010 |     2 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     3 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     4 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     5 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     6 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     7 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     8 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     9 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    10 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    11 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    12 | legal_unit |     1 |      0 |      0
 year-month | 2011 |     1 | legal_unit |     2 |      1 |      0
 year-month | 2011 |     2 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    12 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     1 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     2 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    12 | legal_unit |     2 |      0 |      0
(36 rows)

\x
ROLLBACK TO before_loading_units;
\echo "Test births at the start of the second month"
"Test births at the start of the second month"
\x
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

\echo "User uploads the legal units"
"User uploads the legal units"
\copy public.import_legal_unit_era(valid_from,valid_to,tax_ident,name,birth_date,death_date,physical_address_part1,physical_postcode,physical_postplace,physical_region_code,physical_country_iso_2,postal_address_part1,postal_postcode,postal_postplace,postal_region_code,postal_country_iso_2,primary_activity_category_code,secondary_activity_category_code,sector_code,legal_form_code) FROM 'test/data/41_legal-units-births-start-of-second-month.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                2 |                2
(1 row)

\echo Run worker processing to run import jobs and generate computed data
Run worker processing to run import jobs and generate computed data
CALL worker.process_tasks();
SELECT queue, state, count(*) FROM worker.tasks AS t JOIN worker.command_registry AS c ON t.command = c.command GROUP BY queue,state ORDER BY queue,state;
    queue    |   state   | count 
-------------+-----------+-------
 analytics   | completed |     9
 maintenance | pending   |     1
(2 rows)

\echo "Check legal units over time"
"Check legal units over time"
SELECT external_idents ->> 'tax_ident' as tax_ident, name, valid_after, valid_from, valid_to, birth_date, death_date
FROM public.statistical_unit
WHERE unit_type = 'legal_unit'
ORDER BY external_idents ->> 'tax_ident', valid_from;
 tax_ident |       name        | valid_after | valid_from | valid_to | birth_date | death_date 
-----------+-------------------+-------------+------------+----------+------------+------------
 823573673 | Kranløft Vestland | 2010-01-31  | 2010-02-01 | infinity | 2010-02-01 | 
 921835809 | Kranløft Østland  | 2011-01-31  | 2011-02-01 | infinity | 2011-02-01 | 
(2 rows)

\echo "Check statistical unit history by year - births should be 1 for year 2010 and 2011"
"Check statistical unit history by year - births should be 1 for year 2010 and 2011"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year       | 2010 |       | legal_unit |     1 |      1 |      0
 year       | 2011 |       | legal_unit |     2 |      1 |      0
 year       | 2012 |       | legal_unit |     2 |      0 |      0
(3 rows)

\echo "Check statistical unit history by year-month - births should be 1 for year-month 2010-2 and 2011-2"
"Check statistical unit history by year-month - births should be 1 for year-month 2010-2 and 2011-2"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year-month'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year-month | 2010 |     2 | legal_unit |     1 |      1 |      0
 year-month | 2010 |     3 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     4 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     5 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     6 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     7 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     8 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     9 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    10 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    11 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    12 | legal_unit |     1 |      0 |      0
 year-month | 2011 |     1 | legal_unit |     1 |      0 |      0
 year-month | 2011 |     2 | legal_unit |     2 |      1 |      0
 year-month | 2011 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    12 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     1 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     2 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    12 | legal_unit |     2 |      0 |      0
(35 rows)

\x
ROLLBACK TO before_loading_units;
\echo "Test births in the middle of a month"
"Test births in the middle of a month"
\x
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

\echo "User uploads the legal units"
"User uploads the legal units"
\copy public.import_legal_unit_era(valid_from,valid_to,tax_ident,name,birth_date,death_date,physical_address_part1,physical_postcode,physical_postplace,physical_region_code,physical_country_iso_2,postal_address_part1,postal_postcode,postal_postplace,postal_region_code,postal_country_iso_2,primary_activity_category_code,secondary_activity_category_code,sector_code,legal_form_code) FROM 'test/data/41_legal-units-births-middle-of-month.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                2 |                2
(1 row)

\echo Run worker processing to run import jobs and generate computed data
Run worker processing to run import jobs and generate computed data
CALL worker.process_tasks();
SELECT queue, state, count(*) FROM worker.tasks AS t JOIN worker.command_registry AS c ON t.command = c.command GROUP BY queue,state ORDER BY queue,state;
    queue    |   state   | count 
-------------+-----------+-------
 analytics   | completed |     9
 maintenance | pending   |     1
(2 rows)

\echo "Check legal units over time"
"Check legal units over time"
SELECT external_idents ->> 'tax_ident' as tax_ident, name, valid_after, valid_from, valid_to, birth_date, death_date
FROM public.statistical_unit
WHERE unit_type = 'legal_unit'
ORDER BY external_idents ->> 'tax_ident', valid_from;
 tax_ident |       name        | valid_after | valid_from | valid_to | birth_date | death_date 
-----------+-------------------+-------------+------------+----------+------------+------------
 823573673 | Kranløft Vestland | 2010-01-14  | 2010-01-15 | infinity | 2010-01-15 | 
 921835809 | Kranløft Østland  | 2011-01-14  | 2011-01-15 | infinity | 2011-01-15 | 
(2 rows)

\echo "Check statistical unit history by year - births should be 1 for year 2010 and 2011"
"Check statistical unit history by year - births should be 1 for year 2010 and 2011"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year       | 2010 |       | legal_unit |     1 |      1 |      0
 year       | 2011 |       | legal_unit |     2 |      1 |      0
 year       | 2012 |       | legal_unit |     2 |      0 |      0
(3 rows)

\echo "Check statistical unit history by year-month - births should be 1 for year-month 2010-1 and 2011-1"
"Check statistical unit history by year-month - births should be 1 for year-month 2010-1 and 2011-1"
SELECT resolution, year, month, unit_type, count, births, deaths
FROM public.statistical_history
WHERE resolution = 'year-month'
AND year < 2013
AND unit_type = 'legal_unit';
 resolution | year | month | unit_type  | count | births | deaths 
------------+------+-------+------------+-------+--------+--------
 year-month | 2010 |     1 | legal_unit |     1 |      1 |      0
 year-month | 2010 |     2 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     3 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     4 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     5 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     6 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     7 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     8 | legal_unit |     1 |      0 |      0
 year-month | 2010 |     9 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    10 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    11 | legal_unit |     1 |      0 |      0
 year-month | 2010 |    12 | legal_unit |     1 |      0 |      0
 year-month | 2011 |     1 | legal_unit |     2 |      1 |      0
 year-month | 2011 |     2 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2011 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2011 |    12 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     1 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     2 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     3 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     4 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     5 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     6 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     7 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     8 | legal_unit |     2 |      0 |      0
 year-month | 2012 |     9 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    10 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    11 | legal_unit |     2 |      0 |      0
 year-month | 2012 |    12 | legal_unit |     2 |      0 |      0
(36 rows)

\x
ROLLBACK;
