BEGIN;
\echo "Setting up Statbus using the web provided examples"
"Setting up Statbus using the web provided examples"
\echo "User selected the Activity Category Standard"
"User selected the Activity Category Standard"
INSERT INTO settings(activity_category_standard_id,only_one_setting)
SELECT id, true FROM activity_category_standard WHERE code = 'isic_v4'
ON CONFLICT (only_one_setting)
DO UPDATE SET
   activity_category_standard_id =(SELECT id FROM activity_category_standard WHERE code = 'isic_v4')
   WHERE settings.id = EXCLUDED.id;
;
\echo "User uploads the sample activity categories"
"User uploads the sample activity categories"
\copy public.activity_category_available_custom(path,name) FROM 'app/public/demo/activity_custom_isic_demo.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo "User uploads the sample regions"
"User uploads the sample regions"
\copy public.region_upload(path, name) FROM 'app/public/demo/regions_demo.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo "User uploads the sample legal forms"
"User uploads the sample legal forms"
\copy public.legal_form_custom_only(code,name) FROM 'app/public/demo/legal_forms_demo.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo "User uploads the sample sectors"
"User uploads the sample sectors"
\copy public.sector_custom_only(path,name,description) FROM 'app/public/demo/sectors_demo.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SAVEPOINT before_loading_units;
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

\echo "Same external ident for legal unit and establishment"
"Same external ident for legal unit and establishment"
\echo "User uploads legal units"
"User uploads legal units"
\copy public.import_legal_unit_era(valid_from, valid_to, tax_ident,stat_ident,name,birth_date,physical_region_code,physical_country_iso_2,primary_activity_category_code,legal_form_code,sector_code,employees,turnover,data_source_code) FROM 'test/data/31_legal_units.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo "User uploads formal establishments with same stat_ident as legal units"
"User uploads formal establishments with same stat_ident as legal units"
\copy public.import_establishment_era_for_legal_unit(valid_from, valid_to, tax_ident,stat_ident,name,physical_region_code,physical_country_iso_2,primary_activity_category_code,employees,turnover,legal_unit_tax_ident,data_source_code) FROM 'test/data/31_formal_establishments_errors.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
ERROR:  The external identifier stat_ident for establishment already taken by a legal_unit for row {"name": "NILE PEARL WATER", "tag_path": null, "turnover": "0", "valid_to": "infinity", "employees": "0", "tax_ident": "92212760144", "birth_date": null, "death_date": null, "stat_ident": "1000", "valid_from": "2024-01-01", "sector_code": null, "postal_postcode": null, "data_source_code": "nlr", "postal_postplace": null, "physical_postcode": null, "physical_postplace": null, "postal_region_code": null, "postal_region_path": null, "legal_unit_tax_ident": "2212760144", "physical_region_code": "225613", "physical_region_path": null, "postal_address_part1": null, "postal_address_part2": null, "postal_address_part3": null, "postal_country_iso_2": null, "legal_unit_stat_ident": null, "physical_address_part1": null, "physical_address_part2": null, "physical_address_part3": null, "physical_country_iso_2": "UG", "primary_activity_category_code": "4752", "secondary_activity_category_code": null}
CONTEXT:  PL/pgSQL function admin.process_external_idents(jsonb,text) line 75 at RAISE
SQL statement "SELECT external_idents        , prior_id
                                                               FROM admin.process_external_idents(new_jsonb,'establishment') AS r"
PL/pgSQL function admin.import_establishment_era_upsert() line 118 at SQL statement
SQL statement "INSERT INTO public.import_establishment_era(
        valid_from,
        valid_to,
        --
        tax_ident,
        stat_ident,
        --
        legal_unit_tax_ident,
        legal_unit_stat_ident,
        --
        name,
        birth_date,
        death_date,
        physical_address_part1,
        physical_address_part2,
        physical_address_part3,
        physical_postcode,
        physical_postplace,
        physical_region_code,
        physical_region_path,
        physical_country_iso_2,
        postal_address_part1,
        postal_address_part2,
        postal_address_part3,
        postal_postcode,
        postal_postplace,
        postal_region_code,
        postal_region_path,
        postal_country_iso_2,
        primary_activity_category_code,
        secondary_activity_category_code,
        data_source_code,
        employees,
        turnover,
        tag_path
    ) VALUES (
        NEW.valid_from,
        NEW.valid_to,
        --
        NEW.tax_ident,
        NEW.stat_ident,
        --
        NEW.legal_unit_tax_ident,
        NEW.legal_unit_stat_ident,
        --
        NEW.name,
        NEW.birth_date,
        NEW.death_date,
        NEW.physical_address_part1,
        NEW.physical_address_part2,
        NEW.physical_address_part3,
        NEW.physical_postcode,
        NEW.physical_postplace,
        NEW.physical_region_code,
        NEW.physical_region_path,
        NEW.physical_country_iso_2,
        NEW.postal_address_part1,
        NEW.postal_address_part2,
        NEW.postal_address_part3,
        NEW.postal_postcode,
        NEW.postal_postplace,
        NEW.postal_region_code,
        NEW.postal_region_path,
        NEW.postal_country_iso_2,
        NEW.primary_activity_category_code,
        NEW.secondary_activity_category_code,
        NEW.data_source_code,
        NEW.employees,
        NEW.turnover,
        NEW.tag_path
        )"
PL/pgSQL function admin.import_establishment_era_for_legal_unit_upsert() line 7 at SQL statement
COPY import_establishment_era_for_legal_unit, line 2: "2024-01-01,infinity,92212760144,1000,NILE PEARL WATER,225613,UG,4752,0,0,2212760144,nlr"
ROLLBACK TO before_loading_units;
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

\echo "Same external ident for formal establishment and informal establishment"
"Same external ident for formal establishment and informal establishment"
\echo "User uploads legal units"
"User uploads legal units"
\copy public.import_legal_unit_era(valid_from, valid_to, tax_ident,stat_ident,name,birth_date,physical_region_code,physical_country_iso_2,primary_activity_category_code,legal_form_code,sector_code,employees,turnover,data_source_code) FROM 'test/data/31_legal_units.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo "User uploads formal establishments"
"User uploads formal establishments"
\copy public.import_establishment_era_for_legal_unit(valid_from, valid_to, tax_ident,stat_ident,name,physical_region_code,physical_country_iso_2,primary_activity_category_code,employees,turnover,legal_unit_tax_ident,data_source_code) FROM 'test/data/31_formal_establishments.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   2 |                2 |                2
(1 row)

\echo "User uploads informal establishments with same stat_idents as formal establishments"
"User uploads informal establishments with same stat_idents as formal establishments"
\copy public.import_establishment_era_without_legal_unit(valid_from, valid_to, tax_ident,stat_ident,name,physical_region_code,physical_country_iso_2,primary_activity_category_code,employees,turnover,data_source_code) FROM 'test/data/31_informal_establishments_errors.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
ERROR:  Another establishment {"tax_ident": "92212760144", "stat_ident": "2000"} already uses the same identier(s) as the establishment in row {"name": "THE NILE PEARL WATER", "tag_path": null, "turnover": "1200", "valid_to": "infinity", "employees": "1", "tax_ident": "82212760144", "birth_date": null, "death_date": null, "stat_ident": "2000", "valid_from": "2024-01-01", "sector_code": null, "postal_postcode": null, "data_source_code": "nlr", "postal_postplace": null, "physical_postcode": null, "physical_postplace": null, "postal_region_code": null, "postal_region_path": null, "legal_unit_tax_ident": null, "physical_region_code": "225613", "physical_region_path": null, "postal_address_part1": null, "postal_address_part2": null, "postal_address_part3": null, "postal_country_iso_2": null, "legal_unit_stat_ident": null, "physical_address_part1": null, "physical_address_part2": null, "physical_address_part3": null, "physical_country_iso_2": "UG", "primary_activity_category_code": "4752", "secondary_activity_category_code": null}
DETAIL:  Key constraint (type_id, establishment_id) is violated.
HINT:  Check for other units already using the same identifier
CONTEXT:  PL/pgSQL function admin.insert_external_idents(jsonb,external_ident[],integer,integer,integer) line 79 at RAISE
SQL statement "SELECT admin.insert_external_idents(
      new_jsonb,
      external_idents_to_add,
      p_legal_unit_id => null::INTEGER,
      p_establishment_id => inserted_establishment.id,
      p_updated_by_user_id => edited_by_user.id
      )"
PL/pgSQL function admin.import_establishment_era_upsert() line 225 at PERFORM
SQL statement "INSERT INTO public.import_establishment_era (
        valid_from,
        valid_to,
        tax_ident,
        stat_ident,
        name,
        birth_date,
        death_date,
        physical_address_part1,
        physical_address_part2,
        physical_address_part3,
        physical_postcode,
        physical_postplace,
        physical_region_code,
        physical_region_path,
        physical_country_iso_2,
        postal_address_part1,
        postal_address_part2,
        postal_address_part3,
        postal_postcode,
        postal_postplace,
        postal_region_code,
        postal_region_path,
        postal_country_iso_2,
        primary_activity_category_code,
        secondary_activity_category_code,
        sector_code,
        data_source_code,
        employees,
        turnover,
        tag_path
    ) VALUES (
        NEW.valid_from,
        NEW.valid_to,
        NEW.tax_ident,
        NEW.stat_ident,
        NEW.name,
        NEW.birth_date,
        NEW.death_date,
        NEW.physical_address_part1,
        NEW.physical_address_part2,
        NEW.physical_address_part3,
        NEW.physical_postcode,
        NEW.physical_postplace,
        NEW.physical_region_code,
        NEW.physical_region_path,
        NEW.physical_country_iso_2,
        NEW.postal_address_part1,
        NEW.postal_address_part2,
        NEW.postal_address_part3,
        NEW.postal_postcode,
        NEW.postal_postplace,
        NEW.postal_region_code,
        NEW.postal_region_path,
        NEW.postal_country_iso_2,
        NEW.primary_activity_category_code,
        NEW.secondary_activity_category_code,
        NEW.sector_code,
        NEW.data_source_code,
        NEW.employees,
        NEW.turnover,
        NEW.tag_path
        )"
PL/pgSQL function admin.import_establishment_era_without_legal_unit_upsert() line 3 at SQL statement
COPY import_establishment_era_without_legal_unit, line 2: "2024-01-01,infinity,82212760144,2000,THE NILE PEARL WATER,225613,UG,4752,1,1200,nlr"
ROLLBACK;
