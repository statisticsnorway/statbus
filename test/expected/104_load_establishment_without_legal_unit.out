BEGIN;
\i test/setup.sql
-- While the datestyle is set for the database, the pg_regress tool sets the MDY format
-- to ensure consistent date formatting, so we must manually override this
SET datestyle TO 'ISO, DMY';
\if :{?DEBUG}
SET client_min_messages TO debug1;
\else
SET client_min_messages TO NOTICE;
\endif
-- Create temporary function to execute queries as system user
CREATE OR REPLACE FUNCTION test.sudo_exec(
    sql text,
    OUT results jsonb
) RETURNS jsonb
SECURITY DEFINER LANGUAGE plpgsql AS $sudo_exec$
DECLARE
    result_rows jsonb;
BEGIN
    -- Check if the SQL starts with common DDL keywords
    IF sql ~* '^\s*(CREATE|DROP|ALTER|TRUNCATE|GRANT|REVOKE|ANALYZE)' THEN
        -- For DDL statements, execute directly
        EXECUTE sql;
        results := '[]'::jsonb;
    ELSE
        -- For DML/queries, wrap in a SELECT to capture results
        EXECUTE format('
            SELECT COALESCE(
                jsonb_agg(row_to_json(t)),
                ''[]''::jsonb
            )
            FROM (%s) t',
            sql
        ) INTO result_rows;
        results := result_rows;
    END IF;
END;
$sudo_exec$;
-- Grant execute to public since this is for testing
GRANT EXECUTE ON FUNCTION test.sudo_exec(text) TO PUBLIC;
\echo Add users for testing purposes
Add users for testing purposes
SELECT * FROM public.user_create('test.admin@statbus.org', 'admin_user'::statbus_role, 'Admin#123!');
         email          |  password  
------------------------+------------
 test.admin@statbus.org | Admin#123!
(1 row)

SELECT * FROM public.user_create('test.regular@statbus.org', 'regular_user'::statbus_role, 'Regular#123!');
          email           |   password   
--------------------------+--------------
 test.regular@statbus.org | Regular#123!
(1 row)

SELECT * FROM public.user_create('test.restricted@statbus.org', 'restricted_user'::statbus_role, 'Restricted#123!');
            email            |    password     
-----------------------------+-----------------
 test.restricted@statbus.org | Restricted#123!
(1 row)

\echo "Setting up Statbus to load establishments without legal units"
"Setting up Statbus to load establishments without legal units"
-- A Super User configures statbus.
CALL test.set_user_from_email('test.admin@statbus.org');
\echo "User selected the Activity Category Standard"
"User selected the Activity Category Standard"
INSERT INTO settings(activity_category_standard_id,only_one_setting)
SELECT id, true FROM activity_category_standard WHERE code = 'nace_v2.1'
ON CONFLICT (only_one_setting)
DO UPDATE SET
   activity_category_standard_id =(SELECT id FROM activity_category_standard WHERE code = 'nace_v2.1')
   WHERE settings.id = EXCLUDED.id;
;
SELECT acs.code
  FROM public.settings AS s
  JOIN activity_category_standard AS acs
    ON s.activity_category_standard_id = acs.id;
   code    
-----------
 nace_v2.1
(1 row)

\echo "User uploads the sample activity categories"
"User uploads the sample activity categories"
\copy public.activity_category_available_custom(path,name,description) FROM 'samples/norway/activity_category/activity_category_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.activity_category_available;
 count 
-------
  2215
(1 row)

\echo "User uploads the sample regions"
"User uploads the sample regions"
\copy public.region_upload(path, name) FROM 'samples/norway/regions/norway-regions-2024.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.region;
 count 
-------
   417
(1 row)

\echo "User uploads the sample legal forms"
"User uploads the sample legal forms"
\copy public.legal_form_custom_only(code,name) FROM 'samples/norway/legal_form/legal_form_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.legal_form_available;
 count 
-------
    46
(1 row)

\echo "User uploads the sample sectors"
"User uploads the sample sectors"
\copy public.sector_custom_only(path,name,description) FROM 'samples/norway/sector/sector_norway.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT count(*) FROM public.sector_available;
 count 
-------
    33
(1 row)

SELECT code, name, active, custom FROM public.data_source_available;
  code  |               name               | active | custom 
--------+----------------------------------+--------+--------
 census | Census                           | t      | f
 mi     | Manual Input                     | t      | f
 nlr    | National Legal Business Registry | t      | f
 ntr    | National Tax Registry            | t      | f
 other  | Other External Data Source       | t      | f
 survey | Survey Data                      | t      | f
(6 rows)

\echo "User uploads the sample data sources"
"User uploads the sample data sources"
\copy public.data_source_custom(code,name) FROM 'test/data/02_norwegian_data_source.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
SELECT code, name, active, custom FROM public.data_source_available;
 code  |               name               | active | custom 
-------+----------------------------------+--------+--------
 brreg | Brønnøysundregistrene            | t      | t
 mi    | Manuell inntasting               | t      | t
 nav   | Arbeids- og velferdsforvaltninga | t      | t
(3 rows)

SELECT count(*) FROM public.data_source_available;
 count 
-------
     3
(1 row)

SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   0 |                0 |                0
(1 row)

-- Create Import Job for Establishments Without Legal Unit
INSERT INTO public.import_job (definition_id, slug, description, note, edit_comment, time_context_ident)
SELECT
    (SELECT id FROM public.import_definition WHERE slug = 'establishment_without_lu_job_provided'),
    'import_02_eswlu_tc',
    'Import Establishments Without LU (02_load_establishment_without_legal_unit.sql)',
    'Import job for establishments from test/data/02_norwegian-establishments-without-legal-unit.csv using establishment_without_lu_job_provided definition.',
    'Test data load (02_load_establishment_without_legal_unit.sql)',
    'r_year_curr';
\echo "User uploads establishments without legal_unit (via import job: import_02_eswlu_tc)"
"User uploads establishments without legal_unit (via import job: import_02_eswlu_tc)"
\copy public.import_02_eswlu_tc_upload(tax_ident,name,birth_date,death_date,physical_address_part1,physical_postcode,physical_postplace,physical_region_code,physical_country_iso_2,postal_address_part1,postal_postcode,postal_postplace,postal_region_code,postal_country_iso_2,primary_activity_category_code,secondary_activity_category_code,employees,data_source_code) FROM 'test/data/02_norwegian-establishments-without-legal-unit.csv' WITH (FORMAT csv, DELIMITER ',', QUOTE '"', HEADER true);
\echo Run worker processing for import jobs
Run worker processing for import jobs
CALL worker.process_tasks(p_queue => 'import');
SELECT queue, state, count(*) FROM worker.tasks AS t JOIN worker.command_registry AS c ON t.command = c.command WHERE c.queue != 'maintenance' GROUP BY queue,state ORDER BY queue,state;
   queue   |   state   | count 
-----------+-----------+-------
 analytics | pending   |     5
 import    | completed |    44
(2 rows)

\echo "Inspecting import job data for import_02_eswlu_tc"
"Inspecting import job data for import_02_eswlu_tc"
SELECT row_id, state, errors, tax_ident, name, data_source_code, merge_status
FROM public.import_02_eswlu_tc_data
ORDER BY row_id
LIMIT 5;
 row_id |   state   | errors | tax_ident |             name              | data_source_code |                                                                      merge_status                                                                      
--------+-----------+--------+-----------+-------------------------------+------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------
      1 | processed | {}     | 819097232 | NETT & EL TEKNIKK AS          | brreg            | {"establishment": "APPLIED", "primary_activity": "APPLIED", "physical_location": "APPLIED"}
      2 | processed | {}     | 825481982 | GRAPHICS BY MIA               | brreg            | {"establishment": "APPLIED", "primary_activity": "APPLIED", "physical_location": "APPLIED"}
      3 | processed | {}     | 873124032 | NORSVIN SA TESTESTASJON DELTA | brreg            | {"establishment": "APPLIED", "stat_employees": "APPLIED", "postal_location": "APPLIED", "primary_activity": "APPLIED", "physical_location": "APPLIED"}
      4 | processed | {}     | 895406732 | KRAN & SPESIALLØFT AS         | brreg            | {"establishment": "APPLIED", "stat_employees": "APPLIED", "primary_activity": "APPLIED", "physical_location": "APPLIED"}
      5 | processed | {}     | 911856174 | VIKEDAL LEGEKONTOR            | brreg            | {"establishment": "APPLIED", "stat_employees": "APPLIED", "postal_location": "APPLIED", "primary_activity": "APPLIED", "physical_location": "APPLIED"}
(5 rows)

\echo "Checking import job status for import_02_eswlu_tc"
"Checking import job status for import_02_eswlu_tc"
SELECT slug, state, total_rows, imported_rows, error IS NOT NULL AS has_error,
       (SELECT COUNT(*) FROM public.import_02_eswlu_tc_data dr WHERE dr.state = 'error') AS error_rows
FROM public.import_job
WHERE slug = 'import_02_eswlu_tc'
ORDER BY slug;
        slug        |  state   | total_rows | imported_rows | has_error | error_rows 
--------------------+----------+------------+---------------+-----------+------------
 import_02_eswlu_tc | finished |          5 |             5 | f         |          0
(1 row)

\echo "Checking unit counts after import processing"
"Checking unit counts after import processing"
SELECT
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.establishment) AS establishment_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.legal_unit) AS legal_unit_count,
    (SELECT COUNT(DISTINCT id) AS distinct_unit_count FROM public.enterprise) AS enterprise_count;
 establishment_count | legal_unit_count | enterprise_count 
---------------------+------------------+------------------
                   5 |                0 |                5
(1 row)

\echo Run worker processing for analytics tasks
Run worker processing for analytics tasks
CALL worker.process_tasks(p_queue => 'analytics');
SELECT queue, state, count(*) FROM worker.tasks AS t JOIN worker.command_registry AS c ON t.command = c.command WHERE c.queue != 'maintenance' GROUP BY queue,state ORDER BY queue,state;
   queue   |   state   | count 
-----------+-----------+-------
 analytics | completed |     7
 import    | completed |    44
(2 rows)

\x
SELECT unit_type, name, external_idents, data_source_codes, stats, jsonb_pretty(stats_summary) AS stats_summary
FROM statistical_unit ORDER BY name, unit_type;
-[ RECORD 1 ]-----+---------------------------------------------
unit_type         | establishment
name              | GRAPHICS BY MIA
external_idents   | {"tax_ident": "825481982"}
data_source_codes | {brreg}
stats             | {}
stats_summary     | {                                           +
                  | }
-[ RECORD 2 ]-----+---------------------------------------------
unit_type         | enterprise
name              | GRAPHICS BY MIA
external_idents   | {"tax_ident": "825481982"}
data_source_codes | {brreg}
stats             | 
stats_summary     | {                                           +
                  | }
-[ RECORD 3 ]-----+---------------------------------------------
unit_type         | establishment
name              | KRAN & SPESIALLØFT AS
external_idents   | {"tax_ident": "895406732"}
data_source_codes | {brreg}
stats             | {"employees": 19}
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 19,                          +
                  |         "min": 19,                          +
                  |         "sum": 19,                          +
                  |         "mean": 19,                         +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0,                        +
                  |         "variance": 0,                      +
                  |         "sum_sq_diff": 0,                   +
                  |         "coefficient_of_variation_pct": 0   +
                  |     }                                       +
                  | }
-[ RECORD 4 ]-----+---------------------------------------------
unit_type         | enterprise
name              | KRAN & SPESIALLØFT AS
external_idents   | {"tax_ident": "895406732"}
data_source_codes | {brreg}
stats             | 
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 19,                          +
                  |         "min": 19,                          +
                  |         "sum": 19,                          +
                  |         "mean": 19.00,                      +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0.00,                     +
                  |         "variance": 0.00,                   +
                  |         "sum_sq_diff": 0.00,                +
                  |         "coefficient_of_variation_pct": 0.00+
                  |     }                                       +
                  | }
-[ RECORD 5 ]-----+---------------------------------------------
unit_type         | establishment
name              | NETT & EL TEKNIKK AS
external_idents   | {"tax_ident": "819097232"}
data_source_codes | {brreg}
stats             | {}
stats_summary     | {                                           +
                  | }
-[ RECORD 6 ]-----+---------------------------------------------
unit_type         | enterprise
name              | NETT & EL TEKNIKK AS
external_idents   | {"tax_ident": "819097232"}
data_source_codes | {brreg}
stats             | 
stats_summary     | {                                           +
                  | }
-[ RECORD 7 ]-----+---------------------------------------------
unit_type         | establishment
name              | NORSVIN SA TESTESTASJON DELTA
external_idents   | {"tax_ident": "873124032"}
data_source_codes | {brreg}
stats             | {"employees": 16}
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 16,                          +
                  |         "min": 16,                          +
                  |         "sum": 16,                          +
                  |         "mean": 16,                         +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0,                        +
                  |         "variance": 0,                      +
                  |         "sum_sq_diff": 0,                   +
                  |         "coefficient_of_variation_pct": 0   +
                  |     }                                       +
                  | }
-[ RECORD 8 ]-----+---------------------------------------------
unit_type         | enterprise
name              | NORSVIN SA TESTESTASJON DELTA
external_idents   | {"tax_ident": "873124032"}
data_source_codes | {brreg}
stats             | 
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 16,                          +
                  |         "min": 16,                          +
                  |         "sum": 16,                          +
                  |         "mean": 16.00,                      +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0.00,                     +
                  |         "variance": 0.00,                   +
                  |         "sum_sq_diff": 0.00,                +
                  |         "coefficient_of_variation_pct": 0.00+
                  |     }                                       +
                  | }
-[ RECORD 9 ]-----+---------------------------------------------
unit_type         | establishment
name              | VIKEDAL LEGEKONTOR
external_idents   | {"tax_ident": "911856174"}
data_source_codes | {brreg}
stats             | {"employees": 5}
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 5,                           +
                  |         "min": 5,                           +
                  |         "sum": 5,                           +
                  |         "mean": 5,                          +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0,                        +
                  |         "variance": 0,                      +
                  |         "sum_sq_diff": 0,                   +
                  |         "coefficient_of_variation_pct": 0   +
                  |     }                                       +
                  | }
-[ RECORD 10 ]----+---------------------------------------------
unit_type         | enterprise
name              | VIKEDAL LEGEKONTOR
external_idents   | {"tax_ident": "911856174"}
data_source_codes | {brreg}
stats             | 
stats_summary     | {                                           +
                  |     "employees": {                          +
                  |         "max": 5,                           +
                  |         "min": 5,                           +
                  |         "sum": 5,                           +
                  |         "mean": 5.00,                       +
                  |         "type": "number",                   +
                  |         "count": 1,                         +
                  |         "stddev": 0.00,                     +
                  |         "variance": 0.00,                   +
                  |         "sum_sq_diff": 0.00,                +
                  |         "coefficient_of_variation_pct": 0.00+
                  |     }                                       +
                  | }

\echo "Checking statistics"
"Checking statistics"
SELECT unit_type
     , COUNT(DISTINCT unit_id) AS distinct_unit_count
     , jsonb_pretty(jsonb_agg(DISTINCT invalid_codes) FILTER (WHERE invalid_codes IS NOT NULL)) AS invalid_codes
     , jsonb_pretty(jsonb_stats_summary_merge_agg(stats_summary)) AS stats_summary
 FROM statistical_unit
 GROUP BY unit_type;
-[ RECORD 1 ]-------+----------------------------------------------
unit_type           | establishment
distinct_unit_count | 5
invalid_codes       | 
stats_summary       | {                                            +
                    |     "employees": {                           +
                    |         "max": 19,                           +
                    |         "min": 5,                            +
                    |         "sum": 40,                           +
                    |         "mean": 13.33,                       +
                    |         "type": "number",                    +
                    |         "count": 3,                          +
                    |         "stddev": 7.37,                      +
                    |         "variance": 54.33,                   +
                    |         "sum_sq_diff": 108.67,               +
                    |         "coefficient_of_variation_pct": 55.28+
                    |     }                                        +
                    | }
-[ RECORD 2 ]-------+----------------------------------------------
unit_type           | enterprise
distinct_unit_count | 5
invalid_codes       | 
stats_summary       | {                                            +
                    |     "employees": {                           +
                    |         "max": 19,                           +
                    |         "min": 5,                            +
                    |         "sum": 40,                           +
                    |         "mean": 13.33,                       +
                    |         "type": "number",                    +
                    |         "count": 3,                          +
                    |         "stddev": 7.37,                      +
                    |         "variance": 54.33,                   +
                    |         "sum_sq_diff": 108.67,               +
                    |         "coefficient_of_variation_pct": 55.28+
                    |     }                                        +
                    | }

\x
\i test/rollback_unless_persist_is_specified.sql
---------------------------------------------------------------------------
-- Support development loading of the data without rollback using
--   ./devops/manage-statbus.sh psql --variable=PERSIST=true < test/sql/01_load_web_examples.sql
-- Ref. https://stackoverflow.com/a/32597876/1023558
\set PERSIST :PERSIST
-- now PERSIST is set to the string ':PERSIST' if was not already set.
-- Checking it using a CASE statement:
SELECT CASE
  WHEN :'PERSIST'= ':PERSIST'
  THEN 'false'
  ELSE :'PERSIST'
END::BOOL AS "PERSIST" \gset
-- < \gset call at end of the query to set variable.
\if :PERSIST
COMMIT;
\else
ROLLBACK;
\endif
