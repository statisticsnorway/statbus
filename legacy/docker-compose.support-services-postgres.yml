version: "3.4"
services:
  postgres:
    # Automatically build our custom docker image.
    build: ./docker-postgres
    # Speed up disk writes and enable logging to stderr
    command: postgres -c synchronous_commit=off -c log_statement='all' -c shared_buffers=1GB -c log_destination=stderr -c log_line_prefix='%t %d '
    container_name: statbus-pg-postgres
    user: postgres
    ports:
      - "6543:5432"
    restart: always
    secrets:
      - db-admin-password
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/db-admin-password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      # Local mount of directory fails due to docker file system ownership problems.
      # So instead of the line below, we must use a volume
      - postgres-data:/var/lib/postgresql/data:rw
    networks:
      - default

  pgadmin:
    container_name: statbus-pg-pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@statbus.org
      PGADMIN_DEFAULT_PASSWORD: boo8baequoopo5Eoneez
      #PGADMIN_DEFAULT_PASSWORD_FILE: /run/secrets/db-admin-password
      PGADMIN_DISABLE_POSTFIX: true
    ports:
      - 6480:80
    depends_on:
      - "postgres"

  elasticsearch:
    container_name: statbus-pg-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx1024m"
      - discovery.type=single-node
    networks:
      - default

networks:
  default:
    driver: bridge

secrets:
  # The containers using this secret can read it from the file
  # /run/secrets/db-admin-password
  db-admin-password:
    file: db-admin-password.txt

volumes:
  postgres-data:
    # This volume is independent, and therefore protected from accidental deletion
    # when using docker compose.
    #   docker volume create --name=statbus-postgres-data
    # and to remove use
    #   docker volume remove statbus-postgres-data
    # When external is not used, then remove with
    #   docker compose down --volumes
    #external:
    #  name: statbus-postgres-data
  elasticsearch-data:
  statbus-seq-data:
  keys:
