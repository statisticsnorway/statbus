---
#################################
#################################
## Super Linter GitHub Actions ##
#################################
#################################
name: Lint Code Base

#############################
# Start the job on all push #
#############################
on:
  push:
    branches-ignore: [AddingDockerSupportCore3.1]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [AddingDockerSupportCore3.1]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-20.04

    ##################
    # Load all steps #
    ##################
    steps:
      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper
          # list of changed files within `super-linter`
          fetch-depth: 0

      ################################
      # Run Linter against code base #
      ################################
      - name: Set DEFAULT_BRANCH to PR target
        # if base_ref has a value, this is a PR
        # we save the PR target branch name to a variable for use in linter config
        # we pass string between job steps by echoing to $GITHUB_ENV, making it available in $env later
        if: ${{ github.base_ref != '' }}
        run: |
          # shellcheck disable=2086
          echo "DEFAULT_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV
          echo "this is a PR branch. Let's only lint the files that are changed against the target branch '${{ github.base_ref }}'"
      - name: Set DEFAULT_BRANCH to current branch
        # if base_ref has no value, this is just a commit on a branch
        # we need to strip refs/heads from github.ref to find the current branch name
        # then save the current branch name to a variable for use in linter config later
        # we pass strings between job steps by echoing to $GITHUB_ENV, making it available in $env later
        if: ${{ github.base_ref == '' }}
        run: |
          # shellcheck disable=2086
          echo "DEFAULT_BRANCH=$(echo '${{ github.ref }}' | sed 's/refs\/heads\///')" >> $GITHUB_ENV
          echo "this is just a branch push, not a PR."
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: ${{ !contains(github.event_name, 'pull_request') }}
          DEFAULT_BRANCH: ${{ env.DEFAULT_BRANCH }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_GITIGNORED_FILES: true
          GIT_DISCOVERY_ACROSS_FILESYSTEM: true
          # USE_FIND_ALGORITHM: true
          # ACTIONS_RUNNER_DEBUG: true
