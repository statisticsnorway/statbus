version: '3.4'
services:
  nscreg.server:
    container_name: nscreg.server
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80'
    image: nscreg:latest
    build:
      context: .
      dockerfile: src/nscreg.Server/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./Library/Keychains/:/root/.aspnet/https
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
      - elastic
      
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql19-latest
    user: root
    ports:
      - "1433:1433"
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: 12qw!@QW
      MSSQL_PID: Express
      MSSQL_LCID: 1049
      MSSQL_COLLATION: Cyrillic_General_CI_AS
    healthcheck:
      test: '/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P 12qw!@QW -Q "Select 1"'
      interval: 20s
      retries: 5
    volumes:
      - ./dbackups/:/var/dbackups/
      - nscreg-sql-data:/var/opt/mssql/data:rw
    networks:
      - elastic
  elasticsearch:
   container_name: elasticsearch
   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
   ports:
    - 9200:9200
   volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
   environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node
   networks:
    - elastic
  
networks:
  elastic:
    driver: bridge

volumes:
  elasticsearch-data:
  nscreg-sql-data:
